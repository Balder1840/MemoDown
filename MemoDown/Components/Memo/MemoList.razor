<list>
    <RadzenStack AlignItems="AlignItems.Center" Gap="0" class="rz-mx-auto h-100">
        <div class="list-search w-100">
            <RadzenFormField>
                <Start>
                    <RadzenIcon Icon="search" />
                </Start>
                <ChildContent>
                    <RadzenTextBox Placeholder="搜索笔记" />
                </ChildContent>
            </RadzenFormField>
        </div>
        @if (Memo != null)
        {
            <div class="list-hd">
                <div class="path-name">@Memo.Name</div>
            </div>
        }

        @if (Memo?.Children != null && Memo.Children.Any())
        {
            <MemoPanelMenu class="rz-scrollbars w-100">
                <MemoItems Memos="Memo?.Children" CurrentMemo="Selection" OnMenuItemClick=@OnMemoItemClick OnBtnMoreClick="OnMoreClick" RenderChildren="false" />
            </MemoPanelMenu>
        }
        else
        {
            <div class="no-content">
                <div>
                    <i class="icon-empty"></i>
                    <p>没有找到文件</p>
                    <RadzenButton Text="新建笔记" Shade="Shade.Light" Variant="Variant.Flat" />
                </div>
            </div>
        }
    </RadzenStack>
</list>

@code {
    [Parameter]
    public MemoItem? Memo { get; set; }

    [Parameter]
    public MemoItem? Selection { get; set; }

    [Parameter]
    public EventCallback<MemoItem?> SelectionChanged { get; set; }

    public async Task OnMemoItemClick(MemoMenuItemEventArgs args)
    {
        var memo = args.Value as MemoItem;
        await SelectionChanged.InvokeAsync(memo);
    }

    void OnMoreClick(MouseEventArgs args)
    {

    }
}
